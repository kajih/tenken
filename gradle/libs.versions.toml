[versions]
spring-boot = "3.5.0"
spring = "6.2.7"
micrometer = "1.15.0"
jackson = "2.19.0"
netty = "4.1.121.Final"
reactor-core = "3.7.6"
reactor-test = "3.5.0"
reactor-netty = "1.2.6"
logback = "1.5.18"
log4j = "2.24.3"
slf4j = "2.0.17"
lombok = "1.18.38"
jakarta-annotation = "3.0.0"
hibernate-validator = "8.0.2.Final"
jakarta-validation = "3.0.2"
jboss-logging = "3.6.1.Final"
classmate = "1.7.0"
swagger-annotations = "2.2.32"
jackson-nullable = "0.2.6"
modulith = "1.4.0-RC1"
jmolecules-events = "1.10.0"
snakeyaml = "2.4"
tomcat-el = "10.1.41"
datafaker = "2.4.3"

# Pluginversions
openapi-generator = "7.13.0"
ben-manes-versions = "0.52.0"

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
ben-manes-versions = { id = "com.github.ben-manes.versions", version.ref = "ben-manes-versions" }

[libraries]
# Misc
jackson-dataformat-csv = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv", version.ref = "jackson" }
datafaker = { module = "net.datafaker:datafaker", version.ref = "datafaker" }

# Spring Boot
spring-boot = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-dev-tools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-json = { module = "org.springframework.boot:spring-boot-starter-json", version.ref = "spring-boot" }
spring-boot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging", version.ref = "spring-boot" }
spring-boot-starter-reactor-netty = { module = "org.springframework.boot:spring-boot-starter-reactor-netty", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }

# Spring Framework
spring-aop = { module = "org.springframework:spring-aop", version.ref = "spring" }
spring-beans = { module = "org.springframework:spring-beans", version.ref = "spring" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-core = { module = "org.springframework:spring-core", version.ref = "spring" }
spring-expression = { module = "org.springframework:spring-expression", version.ref = "spring" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring" }
spring-webflux = { module = "org.springframework:spring-webflux", version.ref = "spring" }

# Micrometer
micrometer-observation = { module = "io.micrometer:micrometer-observation", version.ref = "micrometer" }
micrometer-commons = { module = "io.micrometer:micrometer-commons", version.ref = "micrometer" }

# Jackson
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-parameter-names = { module = "com.fasterxml.jackson.module:jackson-module-parameter-names", version.ref = "jackson" }
jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "jackson-nullable" }

# Reactor / Netty
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor-core" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor-test" }

reactor-netty-http = { module = "io.projectreactor.netty:reactor-netty-http", version.ref = "reactor-netty" }
reactor-netty-core = { module = "io.projectreactor.netty:reactor-netty-core", version.ref = "reactor-netty" }

# Netty (shared across components)
netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "netty" }
netty-handler = { module = "io.netty:netty-handler", version.ref = "netty" }

# Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-to-slf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4j" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

# Jakarta / Validation
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator" }

# Misc Validation
jboss-logging = { module = "org.jboss.logging:jboss-logging", version.ref = "jboss-logging" }
classmate = { module = "com.fasterxml:classmate", version.ref = "classmate" }
tomcat-embed-el = { module = "org.apache.tomcat.embed:tomcat-embed-el", version.ref = "tomcat-el" }

# YAML
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }

# Lombok
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# Swagger / OpenAPI
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger-annotations" }

# Spring Modulith
spring-modulith-bom = { module = "org.springframework.modulith:spring-modulith-bom", version.ref = "modulith" }
spring-modulith-starter-core = { module = "org.springframework.modulith:spring-modulith-starter-core", version.ref = "modulith" }
spring-modulith-api = { module = "org.springframework.modulith:spring-modulith-api", version.ref = "modulith" }
spring-modulith-apt = { module = "org.springframework.modulith:spring-modulith-apt", version.ref = "modulith" }
spring-modulith-moments = { module = "org.springframework.modulith:spring-modulith-moments", version.ref = "modulith" }
jmolecules-events = { module = "org.jmolecules:jmolecules-events", version.ref = "jmolecules-events" }

